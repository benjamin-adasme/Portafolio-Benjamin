[
  {
    "objectID": "tidytuesday.html",
    "href": "tidytuesday.html",
    "title": "Participación en Tidy Tuesday",
    "section": "",
    "text": "TT19 - 2024: Rolling Stone Album Rankings\n\n\n\ntidytuesday\n\n\n\n\n\n\n\n\n\n7 may 2024\n\n\nBenjamín Adasme Jara\n\n\n\n\n\n\n\n\n\n\n\n\nTT15 - 2023: US Egg Production\n\n\n\ntidytuesday\n\n\n\n\n\n\n\n\n\n11 abr 2023\n\n\nBenjamín Adasme Jara\n\n\n\n\n\n\n\n\n\n\n\n\nTT14 -2023: Premier League Match Data 2021-2022\n\n\n\ntidytuesday\n\n\n\n\n\n\n\n\n\n4 abr 2023\n\n\nBenjamín Adasme Jara\n\n\n\n\n\n\n\n\n\n\n\n\nTT3 - 2023: Art history data\n\n\n\ntidytuesday\n\n\n\n\n\n\n\n\n\n17 ene 2023\n\n\nBenjamín Adasme Jara\n\n\n\n\n\nNo hay resultados"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Acerca de mí",
    "section": "",
    "text": "Soy sociólogo, egresado en 2019 de la Universidad Católica del Maule. Me dedico al análisis de datos en territorio y educación.\nTrabajo desde hace tres años al lenguaje de programación R, lo que me ha permitido iniciarme en la ciencia de datos de forma autónoma. Actualmente estoy desarrollando proyectos iniciales en Python.\nTengo experiencia en investigación y docencia académica, cargos de gestión profesional, en proyectos de consultoría y organizaciones sin fines de lucro.\nSoy parte de Consultora Nueva Estrategia, empresa maulina dedicada a la asesoría en el análisis de datos cuantitativos, con enfoque en el territorio.\nAficionado y entusiasta de Linux y el software libre/open source."
  },
  {
    "objectID": "tidytuesday/egg_production/index.html",
    "href": "tidytuesday/egg_production/index.html",
    "title": "TT15 - 2023: US Egg Production",
    "section": "",
    "text": "El martes 11 de abril de 2023 Tidy Tuesday publicó los datos sobre producción de huevos en Estados Unidos (enlace). Con estos datos exploramos la producción de huevos de “gallinas libres”, aquellas que se crían fuera de jaulas, siguiendo los métodos tradicionales pre-industrialización."
  },
  {
    "objectID": "tidytuesday/egg_production/index.html#resultado",
    "href": "tidytuesday/egg_production/index.html#resultado",
    "title": "TT15 - 2023: US Egg Production",
    "section": "Resultado",
    "text": "Resultado"
  },
  {
    "objectID": "tidytuesday/egg_production/index.html#código",
    "href": "tidytuesday/egg_production/index.html#código",
    "title": "TT15 - 2023: US Egg Production",
    "section": "Código",
    "text": "Código\nCargamos las librerías y los datos\n\npacman::p_load(tidyverse,\n               tidytuesdayR,\n               lubridate, \n               showtext)\n\ndata_15 &lt;- tt_load(\"2023-04-11\")\n\n---- Compiling #TidyTuesday Information for 2023-04-11 ----\n--- There are 2 files available ---\n\n\n── Downloading files ───────────────────────────────────────────────────────────\n\n  1 of 2: \"egg-production.csv\"\n  2 of 2: \"cage-free-percentages.csv\"\n\n#tidytuesdayR::readme(data_15)\n\negg_prod &lt;- data_15$`egg-production`\negg_free &lt;- data_15$`cage-free-percentages`\n\nhead(egg_prod)\n\n# A tibble: 6 × 6\n  observed_month prod_type     prod_process   n_hens     n_eggs source          \n  &lt;date&gt;         &lt;chr&gt;         &lt;chr&gt;           &lt;dbl&gt;      &lt;dbl&gt; &lt;chr&gt;           \n1 2016-07-31     hatching eggs all          57975000 1147000000 ChicEggs-09-23-…\n2 2016-08-31     hatching eggs all          57595000 1142700000 ChicEggs-10-21-…\n3 2016-09-30     hatching eggs all          57161000 1093300000 ChicEggs-11-22-…\n4 2016-10-31     hatching eggs all          56857000 1126700000 ChicEggs-12-23-…\n5 2016-11-30     hatching eggs all          57116000 1096600000 ChicEggs-01-24-…\n6 2016-12-31     hatching eggs all          57750000 1132900000 ChicEggs-02-28-…\n\n\nCargamos las fuentes desde Google\n\nfont_add_google(\"Montserrat\", \"mont\")\nshowtext_auto()\n\nCambiamos los datos al formato “long” y calculamos la cantidad de huevos de criaderos regulares restado al total aquellos que provienen de gallinas libres.\n\ndata_mod &lt;- egg_prod %&gt;%\n  filter(prod_type == \"table eggs\") %&gt;%\n  pivot_wider(id_cols = observed_month,\n              names_from = prod_process,\n              values_from = n_eggs) %&gt;%\n  rowwise() %&gt;%\n  mutate(regular_egg = all - (`cage-free (non-organic)` + `cage-free (organic)`)) %&gt;%\n  select(-all) %&gt;%\n  pivot_longer(cols = 2:4,\n               names_to = \"prod_process\",\n               values_to = \"n_eggs\")\n\nhead(data_mod)\n\n# A tibble: 6 × 3\n  observed_month prod_process                 n_eggs\n  &lt;date&gt;         &lt;chr&gt;                         &lt;dbl&gt;\n1 2016-07-31     cage-free (non-organic)         NA \n2 2016-07-31     cage-free (organic)             NA \n3 2016-07-31     regular_egg                     NA \n4 2016-08-31     cage-free (non-organic)  397884291.\n5 2016-08-31     cage-free (organic)      315968297.\n6 2016-08-31     regular_egg             6695147411.\n\n\nCon los datos preparados, creamos el gráfico que compara la producción en jaula y sin jaula (orgánicos y no orgánicos)\n\ndata_mod %&gt;% \n  ggplot(aes(observed_month, n_eggs, group = prod_process, color = prod_process)) +\n  geom_line() +\n  geom_point() +\n  #  geom_smooth(show.legend = F)\n  scale_color_manual(values = c(\"coral\", \"lightblue3\", \"lightgreen\"),\n                     labels = c(\"Sin jaula (no orgánico)\", \"Sin jaula (orgánico)\", \"En jaula (no orgánico)\"),\n                     name = \"Tipo de producción\") +\n  scale_y_continuous(labels = scales::label_number(scale = 0.000001, \n                                                   suffix = \" M\")) +\n  labs(title = \"Los huevos de gallinas libres, al alza\",\n       subtitle = \"Producción de huevos para consumo en EE.UU. según forma de producción\",\n       x = \"Año\",\n       y = \"Huevos producidos (en millones)\",\n       caption = \"Twitter: @AdasmeBenja // 'The Humane League's US Egg Production dataset' por Samara Mendez - #TidyTuesday 11/04/2023\") +\n  coord_cartesian(expand = F, clip = \"off\") +\n  theme_minimal(base_size = 16, base_family = \"mont\") +\n  theme(text = element_text(color = \"white\"), \n        axis.text =  element_text(color = \"gray80\"),\n        plot.background = element_rect(fill = \"gray25\"), \n        panel.grid = element_line(colour = \"gray60\"),\n        plot.title = element_text(face = \"bold\", size = 20)\n        # ,\n        # legend.position = \"bottom\", \n        # legend.direction = \"horizontal\"\n        )\n\nWarning: Removed 4 rows containing missing values or values outside the scale range\n(`geom_line()`).\n\n\nWarning: Removed 4 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\n\nGuardamos el gráfico para compartir como imagen\n\nggsave(\n  \"2023-w15-egg1.jpg\",\n  plot = last_plot(),\n  width = 7,\n  height = 3.5\n)"
  },
  {
    "objectID": "tidytuesday/Art_history_data/index.html",
    "href": "tidytuesday/Art_history_data/index.html",
    "title": "TT3 - 2023: Art history data",
    "section": "",
    "text": "En mi primer post publicado de Tidy Tuesday trabajé con los datos del paquete ‘arthistory’, reunidos y procesados para el desafío del 17 de enero de 2023. Estos datos recogen información sobre la representación de artistas en dos libros clásicos de historia del arte: History of Art de Anthony F. Jansons y Art Through the Ages de Helen Gardner. El detalle en el sitio de TidyTuesday en este enlace"
  },
  {
    "objectID": "tidytuesday/Art_history_data/index.html#dentro-de-los-datos",
    "href": "tidytuesday/Art_history_data/index.html#dentro-de-los-datos",
    "title": "TT3 - 2023: Art history data",
    "section": "Dentro de los datos",
    "text": "Dentro de los datos\nAl mirar el dataset del Tidy Tuesday sobre la representación de artistas en estos libros de historia del arte, surgió la pregunta ¿de qué forma aparecen los artistas latinoamericanos en estos manuales? Así, seleccionamos las nacionalidades de este rincón del planeta y lo representamos en el siguiente stream chart."
  },
  {
    "objectID": "tidytuesday/Art_history_data/index.html#código",
    "href": "tidytuesday/Art_history_data/index.html#código",
    "title": "TT3 - 2023: Art history data",
    "section": "Código",
    "text": "Código\nComenzamos cargando las librerías a usar y los datos.\n\npacman::p_load(tidyverse,\n               janitor,\n               tidytuesdayR, \n               lubridate,\n               ggstream,\n               MetBrewer,\n               showtext)\n\ndata_3 &lt;- tt_load(\"2023-01-17\")\n\n---- Compiling #TidyTuesday Information for 2023-01-17 ----\n--- There is 1 file available ---\n\n\n── Downloading files ───────────────────────────────────────────────────────────\n\n  1 of 1: \"artists.csv\"\n\ndf1 &lt;- data_3$artists\n\nCreamos un nuevo data frame con aquellos artistas de origen étnico hispánico o latinoamericano, y calculamos la frecuencia de casos por nacionalidad y año.\n\nlatino_year &lt;- df1 %&gt;% \n  filter(artist_ethnicity == \"Hispanic or Latino origin\") %&gt;% \n  group_by(artist_nationality, year) %&gt;% \n  count() %&gt;% \n  arrange(year)\n\nAgregamos la fuente desde el repositorio de fuentes de Google.\n\nfont_add_google(\"Inter\", \"inter\")\nshowtext_auto()\n\nLlamamos al dataframe con las frecuencias y lo pasamos a ggplot() donde definimos todas las especificaciones.\n\nlatino_year %&gt;% \n  ggplot(aes(year, n, fill = artist_nationality)) + \n  geom_stream()+\n  scale_x_continuous(breaks = seq(1925, 2025, by = 10)) +\n  scale_fill_manual(values = met.brewer(\"Juarez\", 6), \n                    name = NULL,\n                    labels = c(\"Colombiano(a)\",\n                               \"Cubano(a)\",\n                               \"Cubano-americano(a)\",\n                               \"Mexicano(a)\",\n                               \"Peruano(a)\",\n                               \"Español(a)\")) +\n  labs(title = \"Artistas latinos en los libros de historia del arte de Janson y Gardner (1926-2020)\",\n       subtitle = \"Nacionalidades de 17 artistas latinos(as) (4,11%) incluidos en los libros de historia del arte\",\n       caption = \"Fuente: Lemus S, Stam H (2022). arthistory: Art History Textbook Data. - Autor: Benjamín Adasme - #TidyTuesday\",\n       y = NULL,\n       x = \"Año\") +\n  theme_minimal(base_family = \"inter\",\n                base_size = 16) +\n  theme(axis.text.y = element_blank(), \n        legend.position = \"bottom\", \n        panel.grid.minor = element_blank(), \n        plot.background = element_rect(fill = \"seashell2\"), \n        plot.title = element_text(face = \"bold\"), \n        plot.caption = element_text(face = \"italic\"), \n        legend.key.size = unit(0.5, \"cm\"))\n\n\n\n\n\n\n\n\nGuardamos el gráfico para compartir con el hashtag #TidyTuesday\n\nggsave(\n  \"2023-w3-artists1.png\",\n  plot = last_plot(),\n  dpi = 300,\n  units = \"px\",\n  height = 1000,\n  width = 1500\n)"
  },
  {
    "objectID": "posts/piramide-r/index.html",
    "href": "posts/piramide-r/index.html",
    "title": "Pirámides de población con R: el caso de Chile (1970-2024)",
    "section": "",
    "text": "En los últimos años, se ha reactivado en Chile el debate sobre el envejecimiento de la población y los cambios en la tasa de natalidad. En particular, con la última Reforma de Pensiones apareció nuevamente la preocupación por la vejez y cómo la sociedad y el Estado se deben hacer cargo de este proceso vital (al menos eso se discutió, que se logre es otro tema). Se habla que cada vez habrá más población adulta y adulta mayor, que población infantil y juvenil. Estas transformaciones son características de diferentes sociedades, y las primeras en enfrentarlo fueron las potencias económicas europeas. A día de hoy, países como Chile, en el Sur Global, han homologado esas tendencias, con sus particularidades.\nSi bien no es el propósito definir las causas y consecuencias, es importante mencionar que estas son de carácter económico, social y cultural, y entre los factores que inciden podemos mencionar (sin un orden particular) las migraciones urbano-rurales, el acceso a educación, mejoras en la salud y medicina, la integración femenina en el mercado laboral, cambios en los roles de género, la educación sexual y la planificación familiar, entre otros."
  },
  {
    "objectID": "posts/piramide-r/index.html#pirámides-de-población-y-transición-demográfica",
    "href": "posts/piramide-r/index.html#pirámides-de-población-y-transición-demográfica",
    "title": "Pirámides de población con R: el caso de Chile (1970-2024)",
    "section": "Pirámides de población y transición demográfica",
    "text": "Pirámides de población y transición demográfica\nUno de los dispositivos visuales más efectivos para mostrar estos fenómenos son las pirámides de población. En esencia, son histogramas que segmentan la población por edad (usualmente en quinquenios) y sexo, mostrando a hombres a la izquierda y mujeres a la derecha.\nLas barras pueden representar la cantidad absoluta de la población, o su frecuencia relativa. Los datos absolutos son útiles para representar el aumento neto de los habitantes, pero son menos útiles para comparar con otros casos, siendo esto una ventaja que ofrecen las pirámides que usan porcentajes.\nLa demografía, ciencia que estudia las poblaciones humanas, su composición y cambio, ha teorizado en torno a las formas que toman las pirámides de población en las diferentes sociedades. Los cambios vividos durante el siglo XX han generado una transición demográfica, pasando de altas tasas de natalidad y mortalidad, a bajas tasas en ambos indicadores. Esta teoría, que considera en 5 fases, explica cómo ocurre este cambio, y su impacto en la población total.\n\n\n\nEsquema explicativo de las etapas de la transición demográfica. Fuente: Our World in Data\n\n\nVisualmente esto se refleja en la forma de las pirámides de población. Aquellas sociedades con altas tasas de natalidad y mortalidad (fase 1) tienen pirámides con una forma de campana muy marcada con gran cantidad de niños y jóvenes. En el otro extremo tenemos a países de bajas tasas de natalidad y mortalidad, cuyas pirámides tienen una forma más homogénea o pareja, casi como una campana invertida, con muy poca población jóven y una gran mayoría adulta y adulta mayor.\n\n\n\n\n\n\n\n\nAngola, 2005\n\n\n\n\n\n\n\nPortugal, 2023\n\n\n\n\n\n\nFigura 1: Comparación de dos países con estructuras demográficas diferentes. Fuente: Wikimedia Commons.\n\n\n\nPara profundizar en torno a esto recomiendo leer los artículos de Wikipedia sobre Pirámides de Población y Transición demográfica, además de este artículo escrito por Max Roser en Our World in Data."
  },
  {
    "objectID": "posts/piramide-r/index.html#el-caso-de-chile",
    "href": "posts/piramide-r/index.html#el-caso-de-chile",
    "title": "Pirámides de población con R: el caso de Chile (1970-2024)",
    "section": "El caso de Chile",
    "text": "El caso de Chile\nPara conocer el cambio demográfico de Chile debemos recurrir a la principal fuente de información: el Censo de Población y Vivienda. Este levantamiento de datos es ejecutado por el Instituto Nacional de Estadísticas desde el siglo XIX y sus últimas versiones fueron realizadas en los años 1970, 1982, 1992, 2002 y 20171. A fecha de hoy, marzo de 2025, el INE acaba de publicar los primeros resultados resultados del último censo de 20242. Con estos nuevos datos un buen ejercicio es evaluar el cambio demográfico del país en los últimos 60 años.\n\nObtención de los datos\nPara acceder a los datos censales el INE ha dispuesto en su página web diferentes alternativas para obtener la información. Para el Censo de 2017 están disponibles los micro datos y las bases en Redatam, mientras que para los censos de 1992 y 2002 solo están disponibles en Redatam. Los datos de 1970 y 1982 solo son accesibles a través de las memorias publicadas con los resultados, ambos en formato .pdf en el sitio del INE.\nPor ello, el proceso comenzó con la obtención de los datos desde la plataforma Redatam Web para los censos de 1992, 2002 y 2017, solicitando tablas cruzadas con el sexo y la edad en quinquenios. En el caso de 1970 y 1982 fue necesario revisar manualmente los documentos y copiarlos a una planilla de cálculo3. Dado que para el Censo de 1970 los datos agrupados disponen como máxima categoría de edad “85 años y más” fue necesario agrupar al resto de datos acorde a esta categoría máxima.\nTodos los datos quedaron registrados en diferentes archivos de planilla de calculo (.xlsx).\n\n\n\nReporte de resultados XIV Censo de Población y III de Vivienda, 1970"
  },
  {
    "objectID": "posts/piramide-r/index.html#manos-a-la-obra-pirámides-de-población-en-r",
    "href": "posts/piramide-r/index.html#manos-a-la-obra-pirámides-de-población-en-r",
    "title": "Pirámides de población con R: el caso de Chile (1970-2024)",
    "section": "Manos a la obra: pirámides de población en R",
    "text": "Manos a la obra: pirámides de población en R\n\nPreparación y transformación de los datos\nPara comenzar, mi flujo de trabajo se basa en Rstudio Projects. Lo primero es cargar paquetes y los archivos.\n\npacman::p_load(tidyverse, # Paquetes de data science básicos\n               readxl, # Cargar archivos xlsx\n               scales, # Ajustar etiquetas de gráficos\n               paletteer, # Cargar paletas de colores\n               gganimate, # Animar gráficos\n               ggtext, # Funciones de texto\n               glue) # Paste con esteroides\n\n\n# El número indica el año del censo\nbase_70 &lt;- read_xlsx(\"data/composicion_poblacion.xlsx\", sheet = \"censo_70\")\nbase_82 &lt;- read_xlsx(\"data/composicion_poblacion.xlsx\", sheet = \"censo_82\")\nbase_92 &lt;- read_xlsx(\"data/1992_reporte.xlsx\", sheet = \"censo_92\")\nbase_02 &lt;- read_xlsx(\"data/2002_reporte.xlsx\", sheet = \"censo_02\")\nbase_17 &lt;- read_xlsx(\"data/2017_reporte.xlsx\", sheet = \"censo_17\")\nbase_24 &lt;- read_xlsx(\"data/2024_reporte.xlsx\")\n\nYa que los datos quedaron en 6 objetos diferentes, los unimos con el siguiente código:\n\n# unimos todo en una lista\nlista_total &lt;- list(base_70, base_82, base_92, base_02, base_17, base_24)\n# aplicamos rbind a cada elemento de la lista\nunion &lt;- do.call(rbind, lista_total)\n\nAl tenerlo unido, podemos aplicar algunas técnicas de limpieza. Por ejemplo, quitamos la etiqueta “años” de las categorías de edad, y los transformamos en factor. Luego pivoteamos al formato largo, pasando de dos columnas (Hombres-Mujeres) a otras dos (Sexo-Población).\n\nconsolidado &lt;- union |&gt; \n  # removemos la etiqueta \"años\"\n  mutate(Edades = str_remove(Edades, \" años\"),\n         Edades = str_remove(Edades, \"\\\\s\\\\s\"),\n  # Transformamos a factor en el orden en que aparecen\n         Edades = fct_inorder(Edades)) |&gt; \n  pivot_longer(cols = 3:4, \n               names_to = \"Sexo\",\n               values_to = \"Poblacion\")\n\nComo resultado obtenemos el siguiente tibble/data frame, con el año de censo, el tramo de edad, el sexo y la cantidad de población:\n\n\n\n\n\nAño\nEdades\nSexo\nPoblacion\n\n\n\n\n1970\n0-4\nHombres\n567233\n\n\n1970\n0-4\nMujeres\n555601\n\n\n1970\n5-9\nHombres\n624134\n\n\n1970\n5-9\nMujeres\n619796\n\n\n1970\n10-14\nHombres\n559559\n\n\n1970\n10-14\nMujeres\n554819\n\n\n1970\n15-19\nHombres\n446729\n\n\n1970\n15-19\nMujeres\n466736\n\n\n1970\n20-24\nHombres\n370653\n\n\n1970\n20-24\nMujeres\n398383\n\n\n\n\n\nCon este data frame ya podemos crear una pirámide de población. Sin embargo, es recomendable trabajar las magnitudes en términos relativos o porcentuales, ya que nos permiten entender mejor la composición interna de las sociedades, dejando fuera el factor del tamaño total de la población. Además nos permite comparar temporalmente el mismo país y con otros países.\n\nconsol_porc &lt;- consolidado |&gt; \n  #Agrupamos por la variable año, que representa el total de población en cada censo\n  group_by(Año) |&gt; \n  #Dividimos cada valor por el total poblacional de ese año\n  mutate(porc_año = Poblacion/sum(Poblacion))\n\nCon esto, nuestro data frame final queda tal como se ve a continuación. Para descargar este dataset, puede presionar los botones disponibles según el formato deseado.\n\n\n\n\n\n\n\n\nVisualización de la pirámide de población\nCon nuestro data frame listo podemos entrar directamente a lo que nos importa: visualizar nuestras pirámides de población.\nLo primero que debemos entender, tal como lo mencionamos antes, es que la pirámide de población es un histograma o gráfico de barras. Como ya tenemos categorizada y segmentada la información, optaremos directamente por un gráfico de barras horizontales, siguiendo el modelo típico. Pero además tiene otra característica: las barras de hombres y mujeres van en dirección opuesta, es decir, la barra que representa a las mujeres apunta a la derecha, y la que representa a los hombres apunta a la izquierda del eje X.\nVamos a ggplot2 con una primera versión básica de este gráfico.\n\nconsol_porc |&gt;  # Usamos el tibble\n  ggplot(aes(x = porc_año, y = Edades)) + # definimos variables x e y\n  geom_col() # Barras con el valor ya calculado\n\n\n\n\n\n\n\n\nEsta primera salida cumple con algunas cosas: tiene en el eje Y las edades ordenadas de menor a mayor, y en el eje X los porcentajes de cada grupo etario. Sin embargo, por defecto ggplot2 está sumando los porcentajes de hombres y mujeres, y de todos los censos. Para separarlos por sexo usaremos el argumento fill\n\nconsol_porc |&gt;  \n  ggplot(aes(x = porc_año, \n             y = Edades, \n             fill = Sexo)) + # Relleno definido por la variable sexo\n  geom_col() \n\n\n\n\n\n\n\n\nTenemos diferenciado por sexo, pero ggplot2 sigue sumando los datos de todos los levantamientos de censo. Para separar por año utilizaremos la función facet_wrap que nos permitirá recrear el mismo gráfico en diferentes cuadros o facetas.\n\nconsol_porc |&gt; \n  ggplot(aes(x = porc_año, y = Edades, fill = Sexo)) +\n  geom_col() +\n  facet_wrap(.~Año)\n\n\n\n\n\n\n\n\nAhora ya tenemos muy bien diferenciados los datos de hombres y mujeres en cada uno de los censos. Pero no tenemos una forma de pirámide ya que las barras se dibujan en la misma dirección, desde el Y hacia la derecha. Para ello, multiplicaremos los datos de hombres por -1 para moverlo hacia la izquierda.\n\np_base &lt;- consol_porc |&gt; \n  mutate(porc_año = #SObre escribimos la variable\n           if_else(Sexo == \"Mujeres\", #Evaluamos si el dato es de mujeres\n                   porc_año, #Caso verdadero: queda igual (derecha)\n                   porc_año * -1)) |&gt; #Caso falso-hombres: va hacia la izquierda\n  ggplot(aes(x = porc_año, y = Edades, fill = Sexo)) +\n  geom_col() +\n  facet_wrap(.~Año)\n\np_base\n\n\n\n\n\n\n\n\nCon esto ya tenemos la versión básica para poder comparar la composición etaria y de sexo de Chile desde 1970 a 2017.\n\n\nAplicando técnicas de data viz\nSi bien el gráfico creado funciona y cumple con los criterios mínimos de nuestro objetivo, vamos a implementar algunas mejoras:\n\nCambiar el color de las barras\nAjustar las etiquetas del eje X\nDefinir un tema para el gráfico, diferente del predeterminado.\nDefinir un título, subtítulo y un pie de gráfico.\nAjustar la leyenda.\n\nPartimos ajustando el color de las barras. Para ello usamos las funciones scale_. Los colores pueden venir dados manualmente o por una paleta de colores. Como solo tenemos dos valores categóricos, usaremos valores ingresados manualmente.\n\np_base +\n  #Fijamos los colores hex dentro del vector\n  scale_fill_manual(values = c(\"#f9844a\", \"#4d908e\"))  \n\n\n\n\n\n\n\n\nSegundo, arreglamos las etiquetas del eje X. Acá tenemos dos cosas que hacer: agregar la etiqueta de porcentaje “%” y dejar en términos absolutos los valores que aparecen en negativo. Para esto usamos la función scale_x_continuous que permite definir las marcas (breaks) y las etiquetas (labels)\n\np_base +\n  scale_fill_manual(values = c(\"#f9844a\", \"#4d908e\")) +\n  scale_x_continuous(breaks = seq(-0.06,0.06,by=0.02),\n                     labels = label_percent(big.mark = \".\",\n                                            decimal.mark = \",\")) \n\n\n\n\n\n\n\n\nEn el último código usamos la función label_percent() del paquete scales que normalmente es muy útil para formatear porcentajes. Pero como necesitamos deshacernos del signo negativo, utilizaremos una alternativa manual.\n\nmarcas &lt;- seq(-0.06,0.06,by=0.02)\n\np_base +\n  scale_fill_manual(values = c(\"#f9844a\", \"#4d908e\")) +\n  scale_x_continuous(breaks = marcas,\n                     labels = percent(abs(marcas))) \n\n\n\n\n\n\n\n\nA continuación ajustaremos el tema global y agregaremos los títulos.\n\np_base +\n  scale_fill_manual(values = c(\"#f9844a\", \"#4d908e\")) +\n  scale_x_continuous(breaks = marcas,\n                     labels = percent(abs(marcas))) + \n  labs(title = \"La transición demográfica de Chile (1970-2024)\",\n       subtitle = \"Pirámides de población con datos censales\",\n       caption = \"Fuente: Instituto Nacional de Estadísticas, Chile\",\n       x = \"Porcentaje de la población total\",\n       y = \"Edades(quinquenios)\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\nFinalmente, ajustamos la leyenda para que quede en posición horizontal abajo de las pirámides. Y fijamos el título al borde de la imagen.\n\np_base +\n  scale_fill_manual(values = c(\"#f9844a\", \"#4d908e\")) +\n  scale_x_continuous(breaks = marcas,\n                     labels = percent(abs(marcas))) + \n  labs(title = \"La transición demográfica de Chile (1970-2024)\",\n       subtitle = \"Pirámides de población con datos censales\",\n       caption = \"Fuente: Instituto Nacional de Estadísticas, Chile\",\n       x = \"Porcentaje de la población total\",\n       y = \"Edades(quinquenios)\") +\n  guides(fill = guide_legend(position = \"bottom\",\n                             title = NULL)) + \n  theme_minimal() +\n  theme(plot.title.position = 'plot')\n\n\n\n\n\n\n\n\nEl resultado es muy interesante. Postergando brevemente los comentarios demográficos que retomaremos al final, este gráfico cumple perfectamente con el objetivo que nos propusimos, mostrar la composición demográfica de Chile a través del tiempo con las pirámides de población, de forma clara y visualmente atractiva.\n\n\nAnimando la pirámide con gganimate\nHabiendo logrado nuestro objetivo, podemos ir más allá aun y aprovechar el potencial de ggplot2 y gganimate para hacer un gráfico animado de las pirámides de población.\nPara ello, vamos a crear un nuevo gráfico, esta vez sin grilla, donde la forma irá cambiando conforme pasamos de un censo a otro.\nPartiremos creando el gráfico base, sin incluir el año.\n\npre_animacion &lt;- consol_porc |&gt; \n  mutate(porc_año = if_else(Sexo == \"Mujeres\", porc_año , porc_año * -1)) |&gt; \n  ggplot(aes(x = porc_año, y = Edades, fill = Sexo)) +\n  geom_col() +\n  scale_fill_manual(values = c(\"#f9844a\", \"#4d908e\"))+\n  guides(fill = guide_legend(title = NULL, \n                             position = \"bottom\",\n                             reverse = F)) +\n  scale_x_continuous(breaks = marcas,\n                     labels = percent(abs(marcas)),\n                     name = \"Porcentaje de la población total\")+\n  theme_minimal() \n\npre_animacion\n\n\n\n\n\n\n\n\nAhora, la magia. Con el paquete gganimate que cargamos al inicio podemos crear transiciones a partir de una variable, en este caso utilizaremos el año. La función transitions_states() genera fases del gráfico, con su respectiva duración y tiempo de transición.\n\nanim1 &lt;-\n  pre_animacion +\n  transition_states(\n    states = Año,\n    state_length = 4,\n    transition_length = 2\n  ) \n\nanim1\n\n\n\n\n\n\n\n\nFunciona perfectamente. Pero no sabemos qué año se está mostrando en cada momento. Para ello gganimate incorpora herramientas para mejorar los textos de acuerdo a la animación. Incluirmos en el subtítulo {closest_state} que va cambiando junto con el gráfico.\n\nanim1 +\n  labs(title = \"¿Cómo cambia nuestra demografía en los últimos 60 años?\",\n       subtitle = \"Censo de {closest_state}, Chile\",\n       caption = \"Fuente: Censos de Población y Vivienda de 1970, 1982, 1992, 2002, 2017 y 2024, INE Chile\")\n\n\n\n\n\n\n\n\nBien, ya podemos ver claramente a qué año corresponde cada pirámide. Fantástico funcionamiento de gganimate. Con un par de líneas de código tenemos una animación lista y coherente.\nYa que siempre se puede hacer algo más, le daremos el toque estético final. Centraremos el título, y reemplazaremos la leyenda con un texto, aprovechando el paquete ggtext.\n\n# Creamos un tibble con el texto en formato html, sus coordenadas de posición.\n# Incluimos el color como texto enriquecido\nlabs_pir &lt;- tibble(label = c(\"&lt;span style='color:#f9844a'&gt;**Hombres**&lt;/span&gt;\",\n                             \"&lt;span style='color:#4d908e'&gt;**Mujeres**&lt;/span&gt;\"),\n                   x = c(-0.04, 0.04),\n                   y = c(\"80-84\", \"80-84\"),\n                   colores = c(\"#4d908e\",\"#f9844a\"))\n\nanim_final &lt;- anim1 +\n  labs(title = \"¿Cómo cambia nuestra demografía en los últimos 60 años?\",\n       subtitle = \"Censo de {closest_state}, Chile\",\n       caption = \"Fuente: Censos de Población y Vivienda de 1970, 1982, 1992, 2002, 2017 y 2024, INE Chile\") +\n  geom_richtext(data = labs_pir, #Usamos el tibble creado\n                aes(x = x, # las coordenadas x e y\n                    y = y,\n                    label = label,\n                    fill = NA), #Evitamos el argumento fill de las barras\n                fill = NA, #Quitamos recuadro alrededor del texto\n                label.colour = NA, \n                size = 6,\n                show.legend = FALSE) +\n  theme(legend.position = \"none\",\n        plot.title = element_text(hjust = 0.5),\n        plot.subtitle = element_text(hjust = 0.5))\n\n\nanim_final\n\n\n\n\n\n\n\n\nY… ¡voilà!, lista nuestro gráfico animado con las pirámides de población de los últimos censos de Chile. Siempre se puede hacer algo más, pero el resultado es más que aceptable y lo dejaremos hasta aquí. Y para poder compartirlo con el mundo podemos exportarlo en formato .gif como imagen animada, o como video.\n\n#Agrego algunos argumentos extra para mejorar la calidad de la salida\n\n#GIF: predeterminado\nanim_save(filename = \"piramide_poblacion_chile.gif\",\n          animation = anim_final,\n          height = 1080, #Extra\n          width = 1080,\n          units = 'px',\n          res = 150)\n\n#MP4: exportar como video\nanim_save(filename = \"piramide_poblacion_chile.mp4\",\n          animation = anim_final,\n          renderer = av_renderer(),\n          height = 1080,\n          width = 1080,\n          units = 'px',\n          res = 150)"
  },
  {
    "objectID": "posts/piramide-r/index.html#reflexiones-finales",
    "href": "posts/piramide-r/index.html#reflexiones-finales",
    "title": "Pirámides de población con R: el caso de Chile (1970-2024)",
    "section": "Reflexiones finales",
    "text": "Reflexiones finales\nCerramos esta entrega comentando los resultados que hemos obtenido. Primero, nuestro gráfico. Es evidente que el uso de pirámides de población es un recurso muy útil para la demografía. Y el paquete ggplot2 y sus extensiones no fallan para componer una pieza visual clara y atractiva. Quienes ya hayan utilizado ggplot2 sabrán que, aunque al inicio pueda parecer complejo, la lógica de capas (o layers) hace mucho sentido y facilita la creación de los gráficos parte por parte. Definir aspectos a priori simples como el color de las barras, o ajustar específicamente las marcas de los ejes, dan cuenta de los detalles que podemos manejar. Son características que marcan la diferencia entre una imagen genérica, sin cariño (te pienso gráfico estándar de Excel) y una pieza de visualización de datos de la que podamos estar orgullosos y presumir.\nJunto con ello, pudimos ver la flexiblidad y variedad de opciones que ofrece el paquete. Por un lado, nuestro primer gráfico en formato grilla nos permite ver en una pasada todas las pirámides y comparar claramente las transformaciones demográficas. Con un estilo sobrio y serio, es un gráfico que podríamos incluir sin problemas en una publicación, artículo académico, u otro similar. Por otro, la pirámide de población animada tiene un estilo llamativo y muy ilustrativo, ya que poner en movimiento una imagen ayuda a mostrar cambios. Especialmente cuando se trata del paso del tiempo, mostrar las transiciones con gganimate es muy potente. De esta forma, un gráfico animado es perfecto para publicar en redes sociales, blogs o sitios de internet (como este).\nEn términos demográficos, la forma de las pirámides de población muestra claramente el cambio en la composición de la población chilena. Pasamos de una “pirámide” con una base muy marcada, con una forma triangular, a una “campana”, que se achica en su base y se expande en el medio. En 1970 aproximadamente un tercio de la población tenía 15 años o menos. En 2017 el grupo etario más numeroso fue el de 25-29 años, y en 2024 fue el de 30-34. Es decir, estamos evidenciando un desplazamiento del grueso de la población mayoritaria desde la infancia a la adultez. Junto con ello, observamos como los tramos asociados a adultos mayores (+60 años) han aumentado porcentualmente, producto de una mayor esperanza de vida.\nEsto es coherente con lo planteado por la teoría de la transición demográfica. Comparando el esquema con lo observado en la realidad chilena, vemos que nuestro país está en un escenario intermedio entre la fase 3 y 4. El aumento de la población que vimos durante la segunda mitad del siglo XX se está frenando, la natalidad y mortalidad vienen disminuyendo, aunque a un ritmo menor que en otros años.\n\nIndicadores demográficos de Chile. Fuente: Datos del Banco Mundial\n\n\nIndicador\n1970\n2022\n\n\n\n\nTasa de natalidad, bruta (por cada 1.000 personas)\n29\n12\n\n\nTasa de mortalidad, bruta (por cada 1.000 personas)\n8\n7\n\n\nEsperanza de vida al nacer, total (años)\n62\n80\n\n\n\nEn conclusión, los desafíos de la transición demográfica son múltiples. Chile, al igual que otros países, está en la encrucijada de cómo enfrentar este escenario. No se trata solo de cuántas personas hay sino de cómo esas personas viven, se desarrollan y se relacionan con su entorno y sociedad. Tareas pendientes aparecen en todas las materias de acción pública. Los datos deben estar disponibles para entender de la mejor manera nuestra realidad y entregar pistas de cómo conducir las propuestas y soluciones."
  },
  {
    "objectID": "posts/piramide-r/index.html#footnotes",
    "href": "posts/piramide-r/index.html#footnotes",
    "title": "Pirámides de población con R: el caso de Chile (1970-2024)",
    "section": "Notas",
    "text": "Notas\n\n\nEn 2012 se realizó un censo, sin embargo fue considerado inválido por falencias metodológicas↩︎\nDisponibles en el siguiente enlace↩︎\nSi bien fue realizado manualmente, se pueden implementar otro métodos como el Reconocimiento de Caracteres (OCR) para automatizar el proceso↩︎"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Bienvenidos a mi blog",
    "section": "",
    "text": "Bienvenidos/as a esta primera entrada de mi blog/portafolio profesional. Antes de comenzar, me presento. Soy Benjamín Adasme Jara, sociólogo de profesión, y actualmente estoy desarrollando mi carrera como analista estadístico y científico de datos. Puedes leer algo más sobre mi en la sección Acerca de mí o ver mi Curriculum Vitae\nEn esta primera entrada quisiera compartir las razones que me llevan a crear este sitio. ¿Por qué hacer un blog en pleno 2025? ¿Por qué este formato? ¿Por qué mostrarse en internet?"
  },
  {
    "objectID": "posts/welcome/index.html#abrirse-al-mundo",
    "href": "posts/welcome/index.html#abrirse-al-mundo",
    "title": "Bienvenidos a mi blog",
    "section": "Abrirse al mundo",
    "text": "Abrirse al mundo\nEscribir es una forma de exteriorizar aquello que uno piensa y siente, y en este caso, tengo la necesidad de comunicar muchas ideas que he venido desarrollando en los últimos años. Tanto mi carrera profesional como mis intereses personales se han centrado en los siguientes tópicos: estadística, ciencia de datos, informática, software libre, política, territorio, fútbol y sociedad. Quiero un espacio donde poner estos temas, mezclarlos, enredarlos y desenredarlos."
  },
  {
    "objectID": "posts/welcome/index.html#el-formato-un-portafolio-y-blog",
    "href": "posts/welcome/index.html#el-formato-un-portafolio-y-blog",
    "title": "Bienvenidos a mi blog",
    "section": "El formato: un portafolio y blog",
    "text": "El formato: un portafolio y blog\nComunicar es algo muy amplio, sobre todo en estos tiempos de tantos medios. Pero entre tanta fugacidad, la palabra escrita es necesaria también, aquella que perdura en el tiempo y permite pensar durante más de un minuto. Las redes sociales son herramientas muy valiosas, se crean comunidades, se expresan opiniones y difunden información. Sin embargo, por si solas, no dan el ancho para expresar contenido de mayor complejidad (o simplemente el algoritmo te castiga si no estás bailando 30 segundos).\nEn ese sentido, este sitio tendrá un doble formato. Por un lado, pretende ser un portafolio de proyectos, donde pueda exponer algunos trabajos desarrollados en ámbitos profesionales y personales (estos últimos son la mayoría). Por otro, quiero utilizarlo como un blog, donde ir subiendo contenido de forma más o menos regular, con ideas, reflexiones o mini proyectos de código, etc. El blog permite un formato más laxo y abierto, pero sin perder la seriedad."
  },
  {
    "objectID": "posts/welcome/index.html#qué-esperar-de-este-sitio",
    "href": "posts/welcome/index.html#qué-esperar-de-este-sitio",
    "title": "Bienvenidos a mi blog",
    "section": "¿Qué esperar de este sitio?",
    "text": "¿Qué esperar de este sitio?\nPor ahora espero actualizar el sitio de proyectos, con algunos de los trabajos públicos en los que he trabajado. Además, subiré algunos posts durante las próximas semanas. Un adelanto: en Chile se está discutiendo sobre el envejecimiento de la población, y algo podemos decir sobre eso.\nGracias por pasar por aquí, nos leemos pronto."
  },
  {
    "objectID": "posts/foss-software1/index.html",
    "href": "posts/foss-software1/index.html",
    "title": "Guía del software libre para las CCSS",
    "section": "",
    "text": "Pagar o no pagar, he ahí el dilema. Aunque siendo realistas sería Piratear o no piratear.\nLas computadoras personales se han convertido en la herramienta de trabajo por defecto en la gran mayoría de los ámbitos intelectuales, y las ciencias sociales no son la excepción. Hoy nos cuesta imaginar cómo en el pasado nuestros colegas analizaron encuestas sin computadoras o usando solo el precario equipo disponible en alguna universidad, o cómo las grabaciones de entrevistas y grupos focales se hacían en cassette y se transcribían lentamente a mano. Esto que nos parece tan lejano y complejo es parte del pasado gracias al uso masivo de los computadores personales.\nSin embargo, esta herramienta maravillosa tiene sus límites. Tanto en el hardware como en el software, esto tiene costos. Y aunque una PC hoy es más accesible que hace 20 años atrás, aún tenemos limitaciones. Más aún cuando debemos acceder a software específico para cumplir una tarea, y solo tenemos opciones de pago.\nY aunque esto es cierto, tengo una buena noticia para ti: es posible utilizar software sin pagar, de forma segura, transparente y abierta. Te presento al software libre."
  },
  {
    "objectID": "posts/foss-software1/index.html#qué-es-el-software-libre",
    "href": "posts/foss-software1/index.html#qué-es-el-software-libre",
    "title": "Guía del software libre para las CCSS",
    "section": "¿Qué es el software libre?",
    "text": "¿Qué es el software libre?\nImagina que un día tu auto se avería. No sabes que sucede. Lo lógico es que con algún conocimiento de mecánica puedas abrir el capot e investigar. Pero cuando lo intentas abrir sucede que necesitas una llave especial, única, que solo tiene el fabricante. Nadie puede abrirlo, ni tu vecino que te ayuda siempre, ni el mecánico de tu ciudad, solo lo pueden arreglar en la misma fábrica de origen. Eso es lo que pasa con el software privativo, no tienes control sobre lo que sucede con tus programas ni tampoco sabes qué hacen detrás.\nAlgo así fue lo que le pasó a Richard Stallman en los años ’80, un informático estadounidense, cuando quiso crear un driver para una impresora. Quiso entender cómo funcionaba, pero para su sorpresa le negaron el acceso a toda información sobre el aparato. Desde esos días que se ha dedicado a fomentar la apertura y transparencia en la informática como un principio fundamental en la tecnología, promoviendo la creación y uso del software libre.\nEl software libre es la traducción del concepto “free software”. La palabra free en inglés puede significar tanto gratis como libre. Acá usamos el sentido “libre” de la palabra, pues hablamos de software que se puede crear, modificar y distribuir sin ninguna limitación. Y esto lo diferencia del software gratuito, ya que todo el software libre es gratis, pero no todo el software gratis es libre. Por ejemplo, una empresa nos ofrece de forma gratuita su programa, en su versión básica, pero no puedes saber cómo opera ese software, qué hace ni tampoco puedes modificarlo o redistribuirlo. En este caso es un programa gratis pero no libre.\nPodríamos profundizar más en esto (quizás en otra entrada) pero el propósito de este post es ofrecer algunas alternativas de software para aquellas necesidades de estudiantes universitarios, académicos o profesionales de las ciencias sociales y disciplinas afines, principalmente para equipos de escritorio.\n\n\n\nRichard Stallman, impulsor del software libre y fundador de la Free Software Foundation"
  },
  {
    "objectID": "posts/foss-software1/index.html#sistemas-operativos",
    "href": "posts/foss-software1/index.html#sistemas-operativos",
    "title": "Guía del software libre para las CCSS",
    "section": "Sistemas operativos",
    "text": "Sistemas operativos\nPartimos esta guía con la base de cualquier software. No hay programas sin sistema operativo. Y aunque corresponde a una categoría aparte, solo diré que en el sentido actual del concepto el sistema operativo abarca desde el manejo y asignación de recursos del sistema hasta la interfaz gráfica del usuario.\nVersión privativa: En el mundo privativo tenemos como gran dominador a Microsoft Windows, que desde los años ’80 viene monopolizando este mercado. Aun con todas las críticas que tiene (es pesado, ineficiente, te obliga a crear cuentas y roba tu información como usuario, entre otras tantas), sigue siendo el más usado. Detrás tenemos a OSX, el sistema operativo de los computadores Apple, que sin ser masivo logra abarcar un nicho importante de consumidores.\nAlternativa libre: el sistema operativo Linux es la alternativa a los sistemas privativos. Libre, de código abierto, creado por Linus Torvalds en 1991, no es la opción más popular en escritorio, pero sí lo es en servidores y similares. Linux está disponible en diferentes distribuciones, que incorporan el kernel y otras utilidades para hacer un sistema completo. Entre las más populares encontramos Ubuntu, Debian, OpenSuse, Linux Mint, Arch Linux, entre otros. De los mencionados, recomiendo personalmente Linux Mint como la distribución más amigable con nuevos usuarios.\n\n\n\n\n\n\nNota\n\n\n\nSi bien recomiendo el uso de distribuciones Linux, los programas que se incluyen a continuación pueden ejecutarse en otros sistemas operativos, no siendo requisito un cambio de SO para usarlos.\n\n\n\n\n\n\n\n\n\n\nTux, la mascota de Linux\n\n\n\n\n\n\n\nLinux Mint, distribución de Linux amigable para nuevos usuarios\n\n\n\n\n\n\nFigura 1: Sistema operativo libre: Linux"
  },
  {
    "objectID": "posts/foss-software1/index.html#ofimática",
    "href": "posts/foss-software1/index.html#ofimática",
    "title": "Guía del software libre para las CCSS",
    "section": "Ofimática",
    "text": "Ofimática\nVersión privativa: en este ámboto nuevamente el reinado lo tiene Microsoft con Office, la famosa suite de ofimática, No mucho que decir más que la gran mayoría de las personas no paga licencia y termina cayendo en activadores que ponen en riesgo la seguridad informática. También tenemos la suite de Google con Docs, Sheets, Slides entre otros.\nAlternativa libre: la suite Libre Office es, a mi juicio, la mejor opción en materia de ofimática. Contiene un procesador de texto (Writer), hojas de cálculo (Calc), creador de presentaciones (Impress), entre otros, muy similar a los programas de Office. Su interfaz es muy versátil, pudiendo incluso imitar la distribución de botones y menús de Office. Puede mejorarse con temas, complementos, entre otros. Yo personalmente he usado mucho sus herramientas de creación de expresiones matemáticas para cursos de estadística. Cuenta con sus propios formatos de archivos, pero es totalmente compatible con los usados en Office. Por ejemplo, puedo abrir, editar y guardar cualquier archivo de texto en .docx, a pesar que el formato por defecto en Writer es .odt.\nComparado con Office, creo que las únicas debilidades son las fuentes y tipografía, y la colaboración en línea. Respecto a lo primero, es una cuestión inherente al uso de Linux, pero si se usa en Windows no debiera haber complicación. La colaboración en línea, una función de Office en empresas y organizaciones, no existe en LibreOffice, pero es entendible en tanto ese tipo de tecnología depende de servidores e infraestructura tecnológica que no puede ofrecer The Document Fundation, la organización detrás de este software.\n\n\n\n\n\n\nFigura 2: Libre Office es la alternativa recomendada a Microsoft Office"
  },
  {
    "objectID": "posts/foss-software1/index.html#análisis-de-datos-cuantitativos-y-estadística",
    "href": "posts/foss-software1/index.html#análisis-de-datos-cuantitativos-y-estadística",
    "title": "Guía del software libre para las CCSS",
    "section": "Análisis de datos cuantitativos y estadística",
    "text": "Análisis de datos cuantitativos y estadística\nVersión privativa: en el ámbito de la estadística, las opciones tradicionales parten con Microsoft Excel, que tiene las herramientas básicas para análisis estadístico. Luego tenemos los dos programas que dominan la estadística computacional: SPSS y Stata. El primero, muy popular en las ciencias sociales, mientras que el segundo es el estándar en economía. Como buen programa de pago, jamás usé alguno de forma legal, salvo en el laboratorio de computación de la universidad (SPSS se cerraba cuando se abría en demasiados computadores). Como bien se mencionó, los riesgos de los programas pirata son altos. Además, tienen sistemas de pago por “planes”: el programa base tiene un costo, pero ciertas funciones vienen en paquetes extra que se pagan aparte. Junto con ello, son programas estáticos, no modificables, lo que los limita.\nAlternativas libres: las alternativas en análisis estadístico son varias y depende de cómo quiereas usar el software. Si te gusta trabajar con una interfaz gráfica al estilo SPSS, jamovi es el programa para ti. Basado en R, tiene una apariencia muy sencilla, donde podemos cargar datos o crearlos en una planilla, manejar nuestras variables, ejecutar análisis estadístico descriptivo o inferencial, crear gráficos básicos, etc. Además se pueden agregar funciones extra con complementos.\nSi quieres llevar tus habilidades analíticas un paso más allá, la respuesta es lenguajes de programación. Es un concepto con el que los científicos sociales normalmente no estamos familiarizados, pero que aprenderlo implica una gran ventaja en términos prácticos, para manejar mejor nuestros datos, pero también en términos mentales, pues programar requiere de mucha lógica y razonamiento, ejercicios muy sanos para nuestros cerebros.\nEn particular, las recomendaciones son dos: R y Python. Por un lado, R es un lenguaje de programación pensado en la estadística. Cuenta con un funciones base para gran parte de las tareas estadísticas. Tiene un repositorio amplio de paquetes para incluir otras funcionalidades. Y sobre todo, cuenta con tidyverse, la suite de ciencia de datos desarrollada por Posit.\nPor otro lado tenemos a Python, la navaja suiza de la programación. A diferencia de R, Python es un lenguaje muy versátil que sirve tanto para la ciencia de datos y machine learning como para crear aplicaciones varios. Para análisis de datos los paquetes clásicos son numpy (funciones matemáticas y estadísticas), pandas (manipulación de datos) y matplotlib (gráficos).\nTanto R como Python son más fáciles de usar en un Entorno Integrado de Desarrollo (IDE, por sus siglas en inglés), programas que nos ayudan a usar los lenguajes de forma más amigable. Aquí tenemos a RStudio para R, y Positron, para R y Python, ambos desarrollados por Posit. Tenemos también a VSCode que, aunque es desarrollado por Microsoft, tiene versiones libres de telemetría y monitoreo del demonio de Bill Gates.\n\n\n\n\n\n\n\n\nPython y R\n\n\n\n\n\n\n\nPositron IDE\n\n\n\n\n\n\n\n\n\nJamovi\n\n\n\n\n\n\nFigura 3: Herramientas para análisis cuantitativo"
  },
  {
    "objectID": "posts/foss-software1/index.html#análisis-de-datos-cualitativos",
    "href": "posts/foss-software1/index.html#análisis-de-datos-cualitativos",
    "title": "Guía del software libre para las CCSS",
    "section": "Análisis de datos cualitativos",
    "text": "Análisis de datos cualitativos\nVersión privativa: en el análisis de datos cualitativos encontramos el punto más débil del software libre, debemos reconocerlo. Los CAQDAS (del inglés Computer Assisted/Aided Qualitative Data Analysis Software) o simplemente programa/software para el análisis cualitativo asistido por computador tienen una oferta diversa, sin embargo, las aplicaciones privativas que reinan este campo son Atlas.ti y Nvivo. Ambas con una interfaz de usuario similar, sirven como repositorio de documentos, imágenes, audio y video, donde podemos codificar libremente y organizar nuestra investigación cualitativa con memos, notas, entre otros. Al ser un campo con pocas alternativas, las licencias de estos programas son carísimas y poco accesibles. Por mientras, podemos intentar ampliar nuestro horizonte con las siguientes opciones.\nAlternativas libres: una de las principales tareas básicas de cualquier CAQDAS es la codificación de material, ya sea texto, imágenes, audiovisual, etc. Junto con ello, vincular la codificación, relacionar los hallazgos es importante, sobre todo en enfoques como el de la teoría fundamentada. Para ello, hay varios programas, aquí te traigo dos.\nEl primero es Taguette, un software desarrollado bajo una licencia libre para ofrecer una alternativa open source para el análisis cualitativo. Permite crear “tags” sobre texto en diferentes formatos, resaltar las citas asociadas, vincularlas entre documentos. Permite el trabajo colaborativo en su versión online o server, y tiene alternativas para exportar reportes de la codificación. Puede ejecutarse online o en local usando Python y el programa de libros electrónicos Calibre.\nEl segundo programa es Requal, una interfaz desarrollada con R y Shiny, que permite cargar documentos de texto, crear códigos/nodos/etiquetas y asociarlos a citas, identificarlas con colores. Cuenta con herramientas de análisis para vincular los códigos y un apartado de reportes donde generar consultas sobre nuestro trabajo. La desventaja es que solo trabaja con texto plano (.txt).\nEn otro plano más avanzado, la investigación cualitativa contemporánea está integrando cada vez más las herramientas computacionales. En ese sentido, las técnicas de Procesamiento de Lenguaje Natural (NLP, por sus siglas en inglés) son un gran complemento para las perspectivas tradicionales. Aquí encontramos nuevas técnicas como el análisis de sentimiento, el análisis temático, el reconocimiento de entidades o de relaciones, las que se han potenciado con la Inteligencia Artificial. Esto da para un artículo entero, pero solo mencionaré que Python es la herramienta más apropiada para este tipo de tareas.\n\n\n\n\n\n\n\n\nTaguette\n\n\n\n\n\n\n\nRequal\n\n\n\n\n\n\nFigura 4: Herramientas para análisis cualitativo"
  },
  {
    "objectID": "posts/foss-software1/index.html#gestores-bibliográficos",
    "href": "posts/foss-software1/index.html#gestores-bibliográficos",
    "title": "Guía del software libre para las CCSS",
    "section": "Gestores bibliográficos",
    "text": "Gestores bibliográficos\nCuando se realiza investigación, ya sea como estudiante de pregrado, como académico o profesional, el uso de referencias blibliográficas es clave. Sin un gestor bibliográfico adecuado, la tarea de ordenar citas, obras y autores, junto con los poco apreciados sistemas de citas como APA, se puede convertir en una pesadilla. Por ello tenemos programas que nos facilitan la vida.\nVersión privativa: uno de los clásicos gestores bibliográficos propietarios es Mendeley. Combina dos aplicaciones, una versión web que con complementos permite navegar por la web, y su versión desktop donde se puede ordenar y gestionar cualqueir colección de citas, junto con un lector de pdf. Adquirido por el grupo editorial Elsevier, uno de los más grandes en el mundo de la producción científica. Es un excelente ejemplo del “freeware”: es gratis pero todas las decisiones del programa las toma el grupo Elsevier, empresa monopolista en el ámbito editorial.\nAlternatica libre: dentro de las diferentes opciones libres, creo que Zotero destaca por sobre el resto. Nacido como un complemento para el navegador Firefox, este programa hoy tiene su propia versión de escritorio, con lector de pdf, herramientas para reconocer automáticamente la información de artículos desde la web, y la posibilidad de compartir repositorios bibliográficos con colaboradores. Tiene lo mejor de las alternativas de pago pero de forma abierta y libre. Una tremenda opción para investigadores/as de todas las áreas.\n\n\n\n\n\n\nFigura 5: Zotero es la mejor opción libre para la gestión bibliográfica"
  },
  {
    "objectID": "posts/foss-software1/index.html#mis-aplicaciones-diarias",
    "href": "posts/foss-software1/index.html#mis-aplicaciones-diarias",
    "title": "Guía del software libre para las CCSS",
    "section": "Mis aplicaciones diarias",
    "text": "Mis aplicaciones diarias\nAntes de terminar, les quiero compartir cómo uso mis recursos computacionales en mi día a día. Primero, uso mi computador con un sistema operativo Linux, específicamente Arch Linux con un Gestor de Ventanas de mosaico (tilling windows manager) llamado Hyprland, aunque he usado también Ambientes de Escritorio como KDE. Para ofimática me quedé con Libre Office, soy un fanático de sus programas. Profesionalmente trabajo como analista de datos, y como hobbie también hago análisis de datos, por lo que mi herramienta fundamental es R y Rstudio desde hace unos cuatro años. Lentamente estoy incluyendo los IDEs que mencioné, y trato de mantenerme fresco con mis conocimientos básicos de Python. Navego en internet con Firefox (a pesar de la polémica que atraviesa). Y cuando he investigado, Zotero me ha acompañado siempre."
  },
  {
    "objectID": "posts/foss-software1/index.html#resumen",
    "href": "posts/foss-software1/index.html#resumen",
    "title": "Guía del software libre para las CCSS",
    "section": "Resumen",
    "text": "Resumen\nA modo de conclusión, quiero transmitir el mensaje de que es posible utilizar la tecnología de otra forma. La computación es clave desde hace años, la tenemos incorporada en nuestro día a día. Pero también creo que la manera en que la utilizamos no es neutra. La elección de qué programas, qué proyectos apoyamos y cómo nos relacionamos a través de ellos es una decisión grande que también dice mucho de cómo entendemos el mundo. Por eso este post es un llamado explícito a apoyar lo más posible las iniciativas free and open-source. Mientras más usamos estas herramientas ganamos soberanía sobre nuestro recursos y datos, y fortalecemos una mirada colectiva, solidaria y comunitaria en la tecnología.\nFinalmente, una tabla resumen con los programas que revisamos en este artículo. ¿Crees que falta alguno? ¿Hay otro tipo de software que usas y crees que hay opciones fuera del mundo privativo? ¡Conversemos!\n\n\nResumen del software privativo y sus alternativas libres y open source\n\n\n\n\n\n\n\nTipo de software\nOpciones no libres\nOpciones libres\n\n\n\n\nSistema Operativo\nMS Windows, OSX\nLinux y sus distribuciones\n\n\nOfimática\nMS Office, Suite de Google\nLibre Office\n\n\nAnálisis de datos cuantitativos\nExcel, SPSS, Stata\nR y Python (lenguajes de programación), Jamovi\n\n\nAnálisis de datos cualitativos\nAtlas.ti, Nvivo\nRqual, Taguette, Python\n\n\nGestor bibliográfico\nMendeley\nZotero"
  },
  {
    "objectID": "tidytuesday/premier_league_2122/index.html",
    "href": "tidytuesday/premier_league_2122/index.html",
    "title": "TT14 -2023: Premier League Match Data 2021-2022",
    "section": "",
    "text": "En esta edición de Tidy Tuesday del 04 de abril de 2023 trabajamos con los datos de la Premier League temporada 2021-2022, donde nos entrega la data de cada partido y sus resultados. Con esto, quisimos consultar la cantidad de goles de local y de visita de cada equipo, para saber si la capacidad goleadora se ve afectada por el estadio."
  },
  {
    "objectID": "tidytuesday/premier_league_2122/index.html#resultado",
    "href": "tidytuesday/premier_league_2122/index.html#resultado",
    "title": "TT14 -2023: Premier League Match Data 2021-2022",
    "section": "Resultado",
    "text": "Resultado"
  },
  {
    "objectID": "tidytuesday/premier_league_2122/index.html#código",
    "href": "tidytuesday/premier_league_2122/index.html#código",
    "title": "TT14 -2023: Premier League Match Data 2021-2022",
    "section": "Código",
    "text": "Código\nCargamos los paquetes y los datos\n\npacman::p_load(tidyverse,\n               tidytuesdayR,\n               lubridate, \n               showtext)\n\ndata_14 &lt;- tt_load(\"2023-04-04\")\n\n---- Compiling #TidyTuesday Information for 2023-04-04 ----\n--- There is 1 file available ---\n\n\n── Downloading files ───────────────────────────────────────────────────────────\n\n  1 of 1: \"soccer21-22.csv\"\n\nepl_21_22 &lt;- data_14$`soccer21-22`\n\nLuego, cargamos las fuentes elegidas para este gráfico\n\nfont_add_google(\"Fira Sans\", \"fira\")\nfont_add_google(\"Quicksand\", \"quick\")\nshowtext_auto()\n\nCalculamos la cantidad de goles, tiros y tiros apuerta de los equipos locales y los equipos visitantes.\n\nhome_goals &lt;- epl_21_22 %&gt;% \n  group_by(HomeTeam) %&gt;% \n  summarise(home_goals = sum(FTHG),\n            home_shots = sum(HS),\n            home_shot_target = sum(HST))\n\naway_goals &lt;- epl_21_22 %&gt;% \n  group_by(AwayTeam) %&gt;% \n  summarise(away_goals = sum(FTAG),\n            away_shots = sum(AS),\n            away_shot_target = sum(AST))\n\nhead(home_goals)\n\n# A tibble: 6 × 4\n  HomeTeam    home_goals home_shots home_shot_target\n  &lt;chr&gt;            &lt;dbl&gt;      &lt;dbl&gt;            &lt;dbl&gt;\n1 Arsenal             35        347              116\n2 Aston Villa         29        235               86\n3 Brentford           22        233               77\n4 Brighton            19        280               67\n5 Burnley             18        229               73\n6 Chelsea             37        326              115\n\n\nUnimos los resultados de ambas tablas en una sola consolidada\n\ntot_goal_shot &lt;- home_goals %&gt;% \n  left_join(away_goals, by = c(\"HomeTeam\" = \"AwayTeam\")) %&gt;% \n  rename(\"Team\" = HomeTeam)\n\nhead(tot_goal_shot)\n\n# A tibble: 6 × 7\n  Team        home_goals home_shots home_shot_target away_goals away_shots\n  &lt;chr&gt;            &lt;dbl&gt;      &lt;dbl&gt;            &lt;dbl&gt;      &lt;dbl&gt;      &lt;dbl&gt;\n1 Arsenal             35        347              116         26        241\n2 Aston Villa         29        235               86         23        219\n3 Brentford           22        233               77         26        209\n4 Brighton            19        280               67         23        210\n5 Burnley             18        229               73         16        178\n6 Chelsea             37        326              115         39        266\n# ℹ 1 more variable: away_shot_target &lt;dbl&gt;\n\n\nCreamos el dataset segmentos que permite dibujar las líneas entre puntos.\n\nsegmentos &lt;- tot_goal_shot %&gt;% \n  select(c(Team, home_goals, away_goals)) %&gt;% \n  mutate(goal_dif = home_goals - away_goals,\n         Team = fct_reorder(Team, desc(Team)))\n# levels(segmentos$Team)\n\nhead(segmentos)\n\n# A tibble: 6 × 4\n  Team        home_goals away_goals goal_dif\n  &lt;fct&gt;            &lt;dbl&gt;      &lt;dbl&gt;    &lt;dbl&gt;\n1 Arsenal             35         26        9\n2 Aston Villa         29         23        6\n3 Brentford           22         26       -4\n4 Brighton            19         23       -4\n5 Burnley             18         16        2\n6 Chelsea             37         39       -2\n\n\nLuego selecciinamos solo los goles, reordenamos los equipos para que aparezcan alfabéticamente, y modificamos la forma de la tabla, para que quede en un formato “long”.\n\ntot_long &lt;- tot_goal_shot %&gt;% \n  select(c(Team, home_goals, away_goals)) %&gt;% \n  mutate(Team = fct_reorder(Team, desc(Team))) %&gt;% \n  pivot_longer(cols = 2:3, names_to = \"H_A\", values_to = \"goals\")\n\nhead(tot_long)\n\n# A tibble: 6 × 3\n  Team        H_A        goals\n  &lt;fct&gt;       &lt;chr&gt;      &lt;dbl&gt;\n1 Arsenal     home_goals    35\n2 Arsenal     away_goals    26\n3 Aston Villa home_goals    29\n4 Aston Villa away_goals    23\n5 Brentford   home_goals    22\n6 Brentford   away_goals    26\n\n\nPasamos el dataset en formato “long” a ggplot2 y configuramos todos los detalles.\n\ntot_long %&gt;% \n  ggplot(aes(y = Team, group = Team)) +\n  geom_segment(data = segmentos,\n               aes(x = home_goals, xend = away_goals, yend = Team),\n               color = \"gray40\", \n               linewidth = 0.9) +\n  geom_point(aes(x = goals, color = H_A), size = 2.5) +\n  geom_text(data = segmentos,\n            aes(y = Team, x = (away_goals + goal_dif*0.5), label = abs(goal_dif)),\n            position = position_nudge(y = 0.4),\n            size = 6) +\n  scale_color_manual(values = c(\"#e90052\", \"#38003c\"), # Colores oficiales PL \n                     labels = c(\"Goles de visita\", \"Goles en casa\"),\n                     name = NULL) +\n  labs(x = \"Goles totales\", y = NULL, caption = \"@AdasmeBenja - Datos de TidyTuesday 04-04-2023\",\n       title = \"De local se golea más, (casi) siempre\", \n       subtitle = \"Goles de local y de visita para cada club de Premier League 21-22\") +\n  coord_cartesian(expand = F,\n                  clip = \"off\") +\n  theme_minimal(base_family = \"quick\", base_size = 16) +\n  theme(\n    #plot.background = element_rect(fill = \"#07F2F2\"), \n        title = element_text(family = \"fira\"),\n        axis.text.y = element_text(face = \"bold\"),\n        legend.position = \"bottom\",\n        legend.direction = \"horizontal\",\n        legend.text = element_text(size = 14)#,\n        # legend.key.size = unit(0.5, \"cm\")\n        )\n\n\n\n\n\n\n\n\nGuardamos el gráfico como imágen para exportar y compartir.\n\nggsave(\"2023-w14-premierleague2.jpg\", dpi = 300, width = 6, height = 4)"
  },
  {
    "objectID": "tidytuesday/rolling_stones/index.html",
    "href": "tidytuesday/rolling_stones/index.html",
    "title": "TT19 - 2024: Rolling Stone Album Rankings",
    "section": "",
    "text": "El desafío Tidy Tuesday del 7 de mayo de 2024 trae los datos del ranking de los 500 mejores discos de todos los tiempos elaborada por la revista Rolling Stones en tres ocasiones diferentes: 2003, 2012 y 2020. Aquí quisimos comparar los 10 que estuvieron en la cima en cada lista. ¿Qué discos fueron considerados los mejores? La respuesta es que en las dos listas iniciales estos no cambiaron, pero en 2020 la percepción de los 10 mejores tuvo cambios radicales."
  },
  {
    "objectID": "tidytuesday/rolling_stones/index.html#resultado",
    "href": "tidytuesday/rolling_stones/index.html#resultado",
    "title": "TT19 - 2024: Rolling Stone Album Rankings",
    "section": "Resultado",
    "text": "Resultado"
  },
  {
    "objectID": "tidytuesday/rolling_stones/index.html#código",
    "href": "tidytuesday/rolling_stones/index.html#código",
    "title": "TT19 - 2024: Rolling Stone Album Rankings",
    "section": "Código",
    "text": "Código\nCargamos librerías y datos\n\npacman::p_load(tidytuesdayR, \n               tidyverse, \n               ggbump, \n               paletteer, \n               ggtext,\n               showtext)\n\nl1 &lt;- tt_load(\"2024-05-07\")\n\n---- Compiling #TidyTuesday Information for 2024-05-07 ----\n--- There is 1 file available ---\n\n\n── Downloading files ───────────────────────────────────────────────────────────\n\n  1 of 1: \"rolling_stone.csv\"\n\nrolling_stone &lt;- l1[[\"rolling_stone\"]]\n\nhead(rolling_stone)\n\n# A tibble: 6 × 21\n  sort_name      clean_name     album rank_2003 rank_2012 rank_2020 differential\n  &lt;chr&gt;          &lt;chr&gt;          &lt;chr&gt;     &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;        &lt;dbl&gt;\n1 Sinatra, Frank Frank Sinatra  In t…       100       101       282         -182\n2 Diddley, Bo    Bo Diddley     Bo D…       214       216       455         -241\n3 Presley, Elvis Elvis Presley  Elvi…        55        56       332         -277\n4 Sinatra, Frank Frank Sinatra  Song…       306       308        NA         -195\n5 Little Richard Little Richard Here…        50        50       227         -177\n6 Beyonce        Beyonce        Lemo…        NA        NA        32          469\n# ℹ 14 more variables: release_year &lt;dbl&gt;, genre &lt;chr&gt;, type &lt;chr&gt;,\n#   weeks_on_billboard &lt;dbl&gt;, peak_billboard_position &lt;dbl&gt;,\n#   spotify_popularity &lt;dbl&gt;, spotify_url &lt;chr&gt;, artist_member_count &lt;dbl&gt;,\n#   artist_gender &lt;chr&gt;, artist_birth_year_sum &lt;dbl&gt;,\n#   debut_album_release_year &lt;dbl&gt;, ave_age_at_top_500 &lt;dbl&gt;,\n#   years_between &lt;dbl&gt;, album_id &lt;chr&gt;\n\n\nDefinimos una paleta de colores con el paquete paletteer y la modificamos a nuestro gusto.\n\nmy_colors &lt;- paletteer_d(\"ggthemes::Tableau_20\")\n\nmy_colors[13] &lt;- \"#7375B5\"\nmy_colors[14] &lt;- \"#9C9EDE\"\n\nCargamos las fuentes que usaremos en el gráfico.\n\nfont_add_google(\"Open Sans\", \"opensans\")\nfont_add_google(\"Raleway\", \"raleway\")\nfont_add_google(\"Inter\", \"inter\")\n\nshowtext_auto()\n\nModificamos los datos, primero seleccionando solo aquellos que han estado en el top 10 en alguno de los años, y luego creado una etiqueta personalizada con la información disponible en el dataset.\n\ntop10 &lt;- rolling_stone %&gt;% \n  filter(rank_2003 %in% 1:10 | rank_2020 %in% 1:10) %&gt;% \n  mutate(artist_album = str_wrap(str_glue(\"{clean_name}-{album}\"), 30)) %&gt;% \n  mutate(label = str_glue(\"{artist_album}\\nPos. 2003: {rank_2003}\\nPos. 2020: {rank_2020}\")) %&gt;% \n  pivot_longer(cols = 4:6, names_to = \"año\", values_to = \"rank\") %&gt;% \n  mutate(año = as.numeric(str_remove_all(año, \"rank_\")),\n         label_2 = if_else(año == 2003, label, NA),\n         label = if_else(año == 2020, label, NA))\n\nhead(top10)\n\n# A tibble: 6 × 23\n  sort_name  clean_name  album             differential release_year genre type \n  &lt;chr&gt;      &lt;chr&gt;       &lt;chr&gt;                    &lt;dbl&gt;        &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt;\n1 Dylan, Bob Bob Dylan   Highway 61 Revis…          -14         1965 Coun… Stud…\n2 Dylan, Bob Bob Dylan   Highway 61 Revis…          -14         1965 Coun… Stud…\n3 Dylan, Bob Bob Dylan   Highway 61 Revis…          -14         1965 Coun… Stud…\n4 Beatles    The Beatles Rubber Soul                -30         1965 &lt;NA&gt;  Stud…\n5 Beatles    The Beatles Rubber Soul                -30         1965 &lt;NA&gt;  Stud…\n6 Beatles    The Beatles Rubber Soul                -30         1965 &lt;NA&gt;  Stud…\n# ℹ 16 more variables: weeks_on_billboard &lt;dbl&gt;, peak_billboard_position &lt;dbl&gt;,\n#   spotify_popularity &lt;dbl&gt;, spotify_url &lt;chr&gt;, artist_member_count &lt;dbl&gt;,\n#   artist_gender &lt;chr&gt;, artist_birth_year_sum &lt;dbl&gt;,\n#   debut_album_release_year &lt;dbl&gt;, ave_age_at_top_500 &lt;dbl&gt;,\n#   years_between &lt;dbl&gt;, album_id &lt;chr&gt;, artist_album &lt;chr&gt;, label &lt;glue&gt;,\n#   año &lt;dbl&gt;, rank &lt;dbl&gt;, label_2 &lt;glue&gt;\n\n\nPasamos la data a ggplot2 para hacer la magia. Aquí decidimos usar un “bump chart” que es muy útil para expresar cambios en orden o ranking a través del tiempo.\n\ntop10 %&gt;% \n  ggplot(aes(x = año, y = rank, color = album)) +\n  geom_bump(size = 1) +\n  geom_point(size = 3) +\n  geom_text(aes(label = label, x = año + 2), size = 3.5) +\n  geom_text(aes(label = label_2, x = año - 1.5), size = 3.5) +\n  scale_x_continuous(breaks = c(2003, 2012, 2020)) +\n  scale_y_reverse(breaks = 10:1) +\n  scale_color_manual(values = my_colors) +\n  coord_cartesian(ylim = c(10,1), xlim = c(2000,2023),\n                  clip = \"off\") +\n  labs(title = \"El nuevo top 10 en el ranking de los 500 mejores álbumes de Rolling Stone\",\n       subtitle = \"Del top 10 de 2003 solo dos discos se mantuvieron en el grupo en 2020\",\n       x = NULL,\n       y = NULL,\n       caption = \"Benjamín Adasme Jara - Data de TidyTuesday 07/05/2024. X: @AdasmeBenja\") +\n  theme_minimal() +\n  theme(legend.position = \"none\",\n        plot.background = element_rect(fill = \"gray10\"), \n        panel.grid = element_blank(),\n        axis.text = element_text(color = \"white\", size = 12),\n        plot.title = element_text(colour = \"white\", family = \"opensans\", face = \"bold\", size = 16),\n        plot.subtitle = element_text(colour = \"white\", family = \"raleway\", size = 12),\n        plot.caption = element_text(color = \"white\", hjust = 0)) \n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\nWarning: Removed 36 rows containing missing values or values outside the scale range\n(`geom_text()`).\nRemoved 36 rows containing missing values or values outside the scale range\n(`geom_text()`).\n\n\n\n\n\n\n\n\n\nGuardamos el gráfico para exportar y compartir.\n\nggsave(\n  \"2024-w19-rolling1.jpg\",\n  last_plot(),\n  units = \"px\",\n  width = 1400,\n  height = 800\n)"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Benjamín Adasme Jara - Blog & Portafolio",
    "section": "",
    "text": "Guía del software libre para las CCSS\n\n\n\nopen source\n\nsoftware\n\n\n\nBreve guía sobre las alternativas de software libre disponibles para reemplazar el software privativo en el campo de las ciencias sociales, enfocado en estudiantes, profesionales y académicos\n\n\n\n\n\n13 may 2025\n\n\nBenjamín Adasme Jara\n\n\n\n\n\n\n\n\n\n\n\n\nPirámides de población con R: el caso de Chile (1970-2024)\n\n\n\ncódigo\n\nanálisis\n\nR\n\ndataviz\n\nggplot2\n\n\n\nDiscutiremos brevemente sobre el envejecimiento de la población y transición demográfica, y cómo las pirámides de población visualizan estos procesos. Comentaremos el caso chileno, y utilizaremos los datos de los últimos 6 Censos para crear un tutorial de cómo graficar las pirámides de población en R, con los paquetes ggplot2 y gganimate.\n\n\n\n\n\n27 mar 2025\n\n\nBenjamín Adasme Jara\n\n\n\n\n\n\n\n\n\n\n\n\nBienvenidos a mi blog\n\n\n\nnoticias\n\n\n\n\n\n\n\n\n\n11 feb 2025\n\n\nBenjamín Adasme Jara\n\n\n\n\n\nNo hay resultados"
  },
  {
    "objectID": "projects.html",
    "href": "projects.html",
    "title": "Proyectos",
    "section": "",
    "text": "Página en construcción."
  }
]